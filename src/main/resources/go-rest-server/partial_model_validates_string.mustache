{{#required}}
    if {{#isNullable}}m.{{name}} == nil || {{#isNullable}}*{{/isNullable}}{{/isNullable}}m.{{name}} == "" {
        errs.Append(fmt.Errorf("{{name}} is required"))
    }
{{/required}}
{{#minLength}}
    if {{#isNullable}}m.{{name}} != nil && {{/isNullable}}len({{#isNullable}}*{{/isNullable}}m.{{name}}) < {{minLength}} {
        errs.Append(fmt.Errorf("{{name}} should have minimum length of {{minLength}}"))
    }
{{/minLength}}
{{#maxLength}}
    if {{#isNullable}}m.{{name}} != nil && {{/isNullable}}len({{#isNullable}}*{{/isNullable}}m.{{name}}) > {{maxLength}} {
        errs.Append(fmt.Errorf("{{name}} exceed maximum length {{maxLength}}"))
    }
{{/maxLength}}
{{#isEnum}}
    // {{name}} isEnum
    if {{#isNullable}}m.{{name}} != nil && {{#isNullable}}*{{/isNullable}}{{/isNullable}}m.{{name}} != "" && !validate.IsAllowedValue({{#isNullable}}*{{/isNullable}}m.{{name}}, []string { {{#allowableValues}}{{#enumVars}}{{{value}}},{{/enumVars}}{{/allowableValues}} }) {
        errs.Append(fmt.Errorf("{{name}} value not allowed: %s", m.{{name}}))
    }
{{/isEnum}}